// File: prisma/schema.prisma

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}
// File: prisma/schema.prisma

// ... (existing models like User, Role, LoggingConfiguration, BillConfiguration, BillLog)

model User {
  id             String   @id @default(cuid())
  email          String   @unique
  password       String
  role           Role     @default(USER)
  fingerprintId  String?  @unique
  cardUid        String?  @unique
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
}

enum Role {
  ADMIN
  USER
}

model DeviceExternal {
  id                      String                  @id @default(cuid())
  uniqId                  String                  @unique @default(cuid())
  name                    String
  topic                   String                  @unique
  address                 String?
  createdAt               DateTime                @default(now())
  updatedAt               DateTime                @updatedAt
  loggingConfigs          LoggingConfiguration[]

  sourceForBillConfigs    BillConfiguration[]     @relation("SourceDeviceForBill")
  publishTargetForBillConfig BillConfiguration?   @relation("PublishTargetForBill")

  // Relasi baru untuk PueConfiguration
  // DeviceExternal ini adalah 'apiTopic' untuk PueConfiguration.
  // Oleh karena itu, PueConfiguration akan memiliki sebuah field yang menunjuk ke uniqId DeviceExternal ini.
  // Relasi 'PueApiTopic' akan didefinisikan di PueConfiguration.
  // Jadi, di DeviceExternal ini, kita hanya perlu relasi balik (back-relation)
  pueApiTopicConfig       PueConfiguration? // <-- Ganti nama field menjadi lebih jelas
}


model LoggingConfiguration {
  id           String         @id @default(cuid())
  customName   String
  key          String
  units        String?
  multiply     Float?         @default(1)
  deviceUniqId String
  device       DeviceExternal @relation(fields: [deviceUniqId], references: [uniqId])
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  @@unique([deviceUniqId, key])
}

model LoggedData {
  id        String   @id @default(cuid())
  configId  String
  value     Float
  timestamp DateTime @default(now())
}

model BillConfiguration {
  id                        String         @id @default(cuid())
  customName                String         @unique

  // Menggunakan uniqId untuk relasi ke perangkat sumber (sesuai contoh Anda)
  sourceDeviceUniqId        String
  sourceDevice              DeviceExternal @relation("SourceDeviceForBill", fields: [sourceDeviceUniqId], references: [uniqId])
  sourceDeviceKey           String

  // Menggunakan uniqId untuk relasi ke perangkat "virtual"
  publishTargetDeviceUniqId String
  publishTargetDevice       DeviceExternal @relation("PublishTargetForBill", fields: [publishTargetDeviceUniqId], references: [uniqId])

  rupiahRatePerKwh          Float          @default(1467)
  dollarRatePerKwh          Float          @default(0.1)

  createdAt                 DateTime       @default(now())
  updatedAt                 DateTime       @updatedAt

  logs                      BillLog[]
}

model BillLog {
  id             String            @id @default(cuid())
  configId       String
  config         BillConfiguration @relation(fields: [configId], references: [id], onDelete: Cascade)

  rawValue       Float
  rupiahCost     Float
  dollarCost     Float

  timestamp      DateTime          @default(now())
}

model PueConfiguration {
  id                   String   @id @default(cuid())
  customName           String   @unique
  type                 String   @default("pue")

  // apiTopicUniqId adalah Foreign Key yang menunjuk ke uniqId di DeviceExternal
  apiTopicUniqId       String?  @unique // Ini adalah foreign key di PueConfiguration
  apiTopic             DeviceExternal? @relation("PueApiTopic", fields: [apiTopicUniqId], references: [uniqId]) // <-- PERBAIKAN DI SINI

  pduList              Json? @db.JsonB
  mainPower            Json? @db.JsonB

  createdAt            DateTime @default(now())
  updatedAt            DateTime @updatedAt
}